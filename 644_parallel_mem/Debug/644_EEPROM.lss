
644_EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016c  00800100  00000a94  00000b28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080026c  0080026c  00000c94  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cf0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000170b  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2e  00000000  00000000  00002513  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000096b  00000000  00000000  00003041  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000288  00000000  00000000  000039ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000058b  00000000  00000000  00003c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b79  00000000  00000000  000041bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00004d38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	12 e0       	ldi	r17, 0x02	; 2
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 e9       	ldi	r30, 0x94	; 148
  90:	fa e0       	ldi	r31, 0x0A	; 10
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ac 36       	cpi	r26, 0x6C	; 108
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	ac e6       	ldi	r26, 0x6C	; 108
  a2:	b2 e0       	ldi	r27, 0x02	; 2
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a2 37       	cpi	r26, 0x72	; 114
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 95 01 	call	0x32a	; 0x32a <main>
  b2:	0c 94 48 05 	jmp	0xa90	; 0xa90 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <uart_init>:
	UDR0 = c;
}

void uart_write(char c) {
	loop_until_bit_is_set(UCSR0A, UDRE0);
	UDR0 = c;
  ba:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  be:	80 e1       	ldi	r24, 0x10	; 16
  c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  c4:	e0 ec       	ldi	r30, 0xC0	; 192
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	80 83       	st	Z, r24
  ce:	86 e0       	ldi	r24, 0x06	; 6
  d0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  d4:	88 e1       	ldi	r24, 0x18	; 24
  d6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  da:	08 95       	ret

000000dc <uart_putchar>:
  dc:	cf 93       	push	r28
  de:	c8 2f       	mov	r28, r24
  e0:	8a 30       	cpi	r24, 0x0A	; 10
  e2:	19 f4       	brne	.+6      	; 0xea <uart_putchar+0xe>
  e4:	8d e0       	ldi	r24, 0x0D	; 13
  e6:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_putchar>
  ea:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  ee:	85 ff       	sbrs	r24, 5
  f0:	fc cf       	rjmp	.-8      	; 0xea <uart_putchar+0xe>
  f2:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <uart_getchar>:
}

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
  fa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  fe:	88 23       	and	r24, r24
 100:	e4 f7       	brge	.-8      	; 0xfa <uart_getchar>
	return UDR0;
 102:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 106:	08 95       	ret

00000108 <readInit>:
	writeEnd();
	while(readByte(0)!=0xff){			//data polling - waiting for end of erase operation
		_delay_loop_1(1); //187ns delay.
	}
	
}
 108:	8b b1       	in	r24, 0x0b	; 11
 10a:	80 64       	ori	r24, 0x40	; 64
 10c:	8b b9       	out	0x0b, r24	; 11
 10e:	8b b1       	in	r24, 0x0b	; 11
 110:	80 62       	ori	r24, 0x20	; 32
 112:	8b b9       	out	0x0b, r24	; 11
 114:	8b b1       	in	r24, 0x0b	; 11
 116:	80 68       	ori	r24, 0x80	; 128
 118:	8b b9       	out	0x0b, r24	; 11
 11a:	12 b8       	out	0x02, r1	; 2
 11c:	11 b8       	out	0x01, r1	; 1
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	8a 95       	dec	r24
 122:	f1 f7       	brne	.-4      	; 0x120 <readInit+0x18>
 124:	08 95       	ret

00000126 <readMem>:
 126:	85 b9       	out	0x05, r24	; 5
 128:	98 b9       	out	0x08, r25	; 8
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	98 2f       	mov	r25, r24
 12e:	9a 95       	dec	r25
 130:	f1 f7       	brne	.-4      	; 0x12e <readMem+0x8>
 132:	9b b1       	in	r25, 0x0b	; 11
 134:	9f 7d       	andi	r25, 0xDF	; 223
 136:	9b b9       	out	0x0b, r25	; 11
 138:	98 2f       	mov	r25, r24
 13a:	9a 95       	dec	r25
 13c:	f1 f7       	brne	.-4      	; 0x13a <readMem+0x14>
 13e:	9b b1       	in	r25, 0x0b	; 11
 140:	9f 7b       	andi	r25, 0xBF	; 191
 142:	9b b9       	out	0x0b, r25	; 11
 144:	8a 95       	dec	r24
 146:	f1 f7       	brne	.-4      	; 0x144 <readMem+0x1e>
 148:	80 b1       	in	r24, 0x00	; 0
 14a:	08 95       	ret

0000014c <readEnd>:
 14c:	8b b1       	in	r24, 0x0b	; 11
 14e:	80 66       	ori	r24, 0x60	; 96
 150:	8b b9       	out	0x0b, r24	; 11
 152:	15 b8       	out	0x05, r1	; 5
 154:	18 b8       	out	0x08, r1	; 8
 156:	08 95       	ret

00000158 <readByte>:
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	ec 01       	movw	r28, r24
 15e:	0e 94 84 00 	call	0x108	; 0x108 <readInit>
 162:	ce 01       	movw	r24, r28
 164:	0e 94 93 00 	call	0x126	; 0x126 <readMem>
 168:	c8 2f       	mov	r28, r24
 16a:	0e 94 a6 00 	call	0x14c	; 0x14c <readEnd>
 16e:	8c 2f       	mov	r24, r28
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	08 95       	ret

00000176 <writeInit>:
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	80 62       	ori	r24, 0x20	; 32
 17a:	8b b9       	out	0x0b, r24	; 11
 17c:	8b b1       	in	r24, 0x0b	; 11
 17e:	80 64       	ori	r24, 0x40	; 64
 180:	8b b9       	out	0x0b, r24	; 11
 182:	8b b1       	in	r24, 0x0b	; 11
 184:	80 68       	ori	r24, 0x80	; 128
 186:	8b b9       	out	0x0b, r24	; 11
 188:	12 b8       	out	0x02, r1	; 2
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	81 b9       	out	0x01, r24	; 1
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	8a 95       	dec	r24
 192:	f1 f7       	brne	.-4      	; 0x190 <writeInit+0x1a>
 194:	08 95       	ret

00000196 <writeMem>:
 196:	85 b9       	out	0x05, r24	; 5
 198:	98 b9       	out	0x08, r25	; 8
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	98 2f       	mov	r25, r24
 19e:	9a 95       	dec	r25
 1a0:	f1 f7       	brne	.-4      	; 0x19e <writeMem+0x8>
 1a2:	9b b1       	in	r25, 0x0b	; 11
 1a4:	9f 77       	andi	r25, 0x7F	; 127
 1a6:	9b b9       	out	0x0b, r25	; 11
 1a8:	98 2f       	mov	r25, r24
 1aa:	9a 95       	dec	r25
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <writeMem+0x14>
 1ae:	9b b1       	in	r25, 0x0b	; 11
 1b0:	9f 7d       	andi	r25, 0xDF	; 223
 1b2:	9b b9       	out	0x0b, r25	; 11
 1b4:	62 b9       	out	0x02, r22	; 2
 1b6:	98 2f       	mov	r25, r24
 1b8:	9a 95       	dec	r25
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <writeMem+0x22>
 1bc:	9b b1       	in	r25, 0x0b	; 11
 1be:	90 62       	ori	r25, 0x20	; 32
 1c0:	9b b9       	out	0x0b, r25	; 11
 1c2:	8a 95       	dec	r24
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <writeMem+0x2c>
 1c6:	8b b1       	in	r24, 0x0b	; 11
 1c8:	80 68       	ori	r24, 0x80	; 128
 1ca:	8b b9       	out	0x0b, r24	; 11
 1cc:	08 95       	ret

000001ce <writeEnd>:
 1ce:	8b b1       	in	r24, 0x0b	; 11
 1d0:	80 64       	ori	r24, 0x40	; 64
 1d2:	8b b9       	out	0x0b, r24	; 11
 1d4:	8b b1       	in	r24, 0x0b	; 11
 1d6:	80 62       	ori	r24, 0x20	; 32
 1d8:	8b b9       	out	0x0b, r24	; 11
 1da:	8b b1       	in	r24, 0x0b	; 11
 1dc:	80 68       	ori	r24, 0x80	; 128
 1de:	8b b9       	out	0x0b, r24	; 11
 1e0:	11 b8       	out	0x01, r1	; 1
 1e2:	12 b8       	out	0x02, r1	; 2
 1e4:	15 b8       	out	0x05, r1	; 5
 1e6:	18 b8       	out	0x08, r1	; 8
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	8a 95       	dec	r24
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <writeEnd+0x1c>
 1ee:	08 95       	ret

000001f0 <flashWritebyte>:
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	ec 01       	movw	r28, r24
 1f8:	16 2f       	mov	r17, r22
 1fa:	0e 94 bb 00 	call	0x176	; 0x176 <writeInit>
 1fe:	6a ea       	ldi	r22, 0xAA	; 170
 200:	85 e5       	ldi	r24, 0x55	; 85
 202:	95 e5       	ldi	r25, 0x55	; 85
 204:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
 208:	65 e5       	ldi	r22, 0x55	; 85
 20a:	8a ea       	ldi	r24, 0xAA	; 170
 20c:	9a e2       	ldi	r25, 0x2A	; 42
 20e:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
 212:	60 ea       	ldi	r22, 0xA0	; 160
 214:	85 e5       	ldi	r24, 0x55	; 85
 216:	95 e5       	ldi	r25, 0x55	; 85
 218:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
 21c:	61 2f       	mov	r22, r17
 21e:	ce 01       	movw	r24, r28
 220:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
 224:	0e 94 e7 00 	call	0x1ce	; 0x1ce <writeEnd>
 228:	03 c0       	rjmp	.+6      	; 0x230 <flashWritebyte+0x40>
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	8a 95       	dec	r24
 22e:	f1 f7       	brne	.-4      	; 0x22c <flashWritebyte+0x3c>
 230:	ce 01       	movw	r24, r28
 232:	0e 94 ac 00 	call	0x158	; 0x158 <readByte>
 236:	18 13       	cpse	r17, r24
 238:	f8 cf       	rjmp	.-16     	; 0x22a <flashWritebyte+0x3a>
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	1f 91       	pop	r17
 240:	08 95       	ret

00000242 <flashSectorErase>:
void flashSectorErase(uint8_t addressH){
 242:	1f 93       	push	r17
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	18 2f       	mov	r17, r24
	writeInit();
 24a:	0e 94 bb 00 	call	0x176	; 0x176 <writeInit>
	writeMem(0x5555,0xAA);
 24e:	6a ea       	ldi	r22, 0xAA	; 170
 250:	85 e5       	ldi	r24, 0x55	; 85
 252:	95 e5       	ldi	r25, 0x55	; 85
 254:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x2AAA,0x55);
 258:	65 e5       	ldi	r22, 0x55	; 85
 25a:	8a ea       	ldi	r24, 0xAA	; 170
 25c:	9a e2       	ldi	r25, 0x2A	; 42
 25e:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x5555,0x80);
 262:	60 e8       	ldi	r22, 0x80	; 128
 264:	85 e5       	ldi	r24, 0x55	; 85
 266:	95 e5       	ldi	r25, 0x55	; 85
 268:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x5555,0xAA);
 26c:	6a ea       	ldi	r22, 0xAA	; 170
 26e:	85 e5       	ldi	r24, 0x55	; 85
 270:	95 e5       	ldi	r25, 0x55	; 85
 272:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x2AAA,0x55);
 276:	65 e5       	ldi	r22, 0x55	; 85
 278:	8a ea       	ldi	r24, 0xAA	; 170
 27a:	9a e2       	ldi	r25, 0x2A	; 42
 27c:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(addressH<<8,0x30);
 280:	d0 e0       	ldi	r29, 0x00	; 0
 282:	c1 2f       	mov	r28, r17
 284:	60 e3       	ldi	r22, 0x30	; 48
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	91 2f       	mov	r25, r17
 28a:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeEnd();
 28e:	0e 94 e7 00 	call	0x1ce	; 0x1ce <writeEnd>
	while(readByte(addressH<<8)!=0xff){			//data polling - waiting for end of erase operation
 292:	03 c0       	rjmp	.+6      	; 0x29a <flashSectorErase+0x58>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	8a 95       	dec	r24
 298:	f1 f7       	brne	.-4      	; 0x296 <flashSectorErase+0x54>
 29a:	8d 2f       	mov	r24, r29
 29c:	9c 2f       	mov	r25, r28
 29e:	0e 94 ac 00 	call	0x158	; 0x158 <readByte>
 2a2:	8f 3f       	cpi	r24, 0xFF	; 255
 2a4:	b9 f7       	brne	.-18     	; 0x294 <flashSectorErase+0x52>
		_delay_loop_1(1); //187ns delay.
	}
	
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	08 95       	ret

000002ae <flashReadID>:


uint16_t flashReadID(){
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
	writeInit();
 2b2:	0e 94 bb 00 	call	0x176	; 0x176 <writeInit>
	writeMem(0x5555,0xAA);
 2b6:	6a ea       	ldi	r22, 0xAA	; 170
 2b8:	85 e5       	ldi	r24, 0x55	; 85
 2ba:	95 e5       	ldi	r25, 0x55	; 85
 2bc:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x2AAA,0x55);
 2c0:	65 e5       	ldi	r22, 0x55	; 85
 2c2:	8a ea       	ldi	r24, 0xAA	; 170
 2c4:	9a e2       	ldi	r25, 0x2A	; 42
 2c6:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x5555,0x90);
 2ca:	60 e9       	ldi	r22, 0x90	; 144
 2cc:	85 e5       	ldi	r24, 0x55	; 85
 2ce:	95 e5       	ldi	r25, 0x55	; 85
 2d0:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeEnd();
 2d4:	0e 94 e7 00 	call	0x1ce	; 0x1ce <writeEnd>
	uint16_t temp;
	temp=readByte(0)<<8;
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 ac 00 	call	0x158	; 0x158 <readByte>
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	c9 2f       	mov	r28, r25
 2e4:	d8 2f       	mov	r29, r24
	temp|=readByte(1);
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 ac 00 	call	0x158	; 0x158 <readByte>
 2ee:	c8 2b       	or	r28, r24
	writeInit();
 2f0:	0e 94 bb 00 	call	0x176	; 0x176 <writeInit>
	writeMem(0x5555,0xAA);
 2f4:	6a ea       	ldi	r22, 0xAA	; 170
 2f6:	85 e5       	ldi	r24, 0x55	; 85
 2f8:	95 e5       	ldi	r25, 0x55	; 85
 2fa:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x2AAA,0x55);
 2fe:	65 e5       	ldi	r22, 0x55	; 85
 300:	8a ea       	ldi	r24, 0xAA	; 170
 302:	9a e2       	ldi	r25, 0x2A	; 42
 304:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeMem(0x5555,0xF0);
 308:	60 ef       	ldi	r22, 0xF0	; 240
 30a:	85 e5       	ldi	r24, 0x55	; 85
 30c:	95 e5       	ldi	r25, 0x55	; 85
 30e:	0e 94 cb 00 	call	0x196	; 0x196 <writeMem>
	writeEnd();
 312:	0e 94 e7 00 	call	0x1ce	; 0x1ce <writeEnd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 316:	87 ec       	ldi	r24, 0xC7	; 199
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <flashReadID+0x6c>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <flashReadID+0x72>
 320:	00 00       	nop
	_delay_us(50);
	return temp;
}
 322:	ce 01       	movw	r24, r28
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <main>:

int main(void)
{
	DDRCTRL |= (1<<WE)|(1<<CE)|(1<<OE);		//set outputs as outputs
 32a:	8a b1       	in	r24, 0x0a	; 10
 32c:	80 6e       	ori	r24, 0xE0	; 224
 32e:	8a b9       	out	0x0a, r24	; 10
	DDRCTRL&=~((1<<J0)|(1<<J1)|(1<<J2));	//set jumpers as inputs
 330:	8a b1       	in	r24, 0x0a	; 10
 332:	83 7e       	andi	r24, 0xE3	; 227
 334:	8a b9       	out	0x0a, r24	; 10

	PORTCTRL |= (1<<WE)|(1<<CE)|(1<<OE)|(1<<J0)|(1<<J1)|(1<<J2); // set control signals high and turn on pull-ups on jumpers
 336:	8b b1       	in	r24, 0x0b	; 11
 338:	8c 6f       	ori	r24, 0xFC	; 252
 33a:	8b b9       	out	0x0b, r24	; 11
	
	DDRDAT = 0x00; // DATA as input
 33c:	11 b8       	out	0x01, r1	; 1
	DDRADRL = 0xFF; // Address L as output
 33e:	8f ef       	ldi	r24, 0xFF	; 255
 340:	84 b9       	out	0x04, r24	; 4
	DDRADRH = 0xFF; // Address H as output
 342:	87 b9       	out	0x07, r24	; 7
	
	uart_init();			//initialise UART
 344:	0e 94 5d 00 	call	0xba	; 0xba <uart_init>
	stdout = &uart_output;	//send stdout to UART
 348:	ec e6       	ldi	r30, 0x6C	; 108
 34a:	f2 e0       	ldi	r31, 0x02	; 2
 34c:	8e e0       	ldi	r24, 0x0E	; 14
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	93 83       	std	Z+3, r25	; 0x03
 352:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;	//send UART to stdin
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	91 83       	std	Z+1, r25	; 0x01
 35a:	80 83       	st	Z, r24
	
	//PORTCTRL &= (1<<CE);

	printf("\nSRAM or EEPROM or FLASH interface\n\n");
 35c:	8c e1       	ldi	r24, 0x1C	; 28
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 50 02 	call	0x4a0	; 0x4a0 <puts>
	
	uint16_t id=flashReadID();
 364:	0e 94 57 01 	call	0x2ae	; 0x2ae <flashReadID>
	printf("\ndevice ID: 0x%04x\n\n",id);
 368:	9f 93       	push	r25
 36a:	8f 93       	push	r24
 36c:	80 e4       	ldi	r24, 0x40	; 64
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	9f 93       	push	r25
 372:	8f 93       	push	r24
 374:	0e 94 33 02 	call	0x466	; 0x466 <printf>

	
	if (PINCTRL&(1<<J0))
 378:	0f 90       	pop	r0
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
 37e:	0f 90       	pop	r0
 380:	4c 9b       	sbis	0x09, 4	; 9
 382:	15 c0       	rjmp	.+42     	; 0x3ae <main+0x84>
	{
		printf("\nwriting test pattern...\n\n");
 384:	85 e5       	ldi	r24, 0x55	; 85
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	0e 94 50 02 	call	0x4a0	; 0x4a0 <puts>
		
		
		if (PINCTRL&(1<<J1)){
 38c:	4b 9b       	sbis	0x09, 3	; 9
 38e:	03 c0       	rjmp	.+6      	; 0x396 <main+0x6c>
			//flashChipErase();
			flashSectorErase(0);
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	0e 94 21 01 	call	0x242	; 0x242 <flashSectorErase>
	_delay_us(50);
	return temp;
}

int main(void)
{
 396:	c0 e0       	ldi	r28, 0x00	; 0
 398:	d0 e0       	ldi	r29, 0x00	; 0
 39a:	05 c0       	rjmp	.+10     	; 0x3a6 <main+0x7c>
			//flashChipErase();
			flashSectorErase(0);
		}
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA;i++)
		{
			flashWritebyte(i,i+OFFSETV);
 39c:	6c 2f       	mov	r22, r28
 39e:	ce 01       	movw	r24, r28
 3a0:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <flashWritebyte>
		
		if (PINCTRL&(1<<J1)){
			//flashChipErase();
			flashSectorErase(0);
		}
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA;i++)
 3a4:	21 96       	adiw	r28, 0x01	; 1
 3a6:	c1 15       	cp	r28, r1
 3a8:	23 e0       	ldi	r18, 0x03	; 3
 3aa:	d2 07       	cpc	r29, r18
 3ac:	b8 f3       	brcs	.-18     	; 0x39c <main+0x72>
	while (1)
	{
		uint8_t temp;

		
		printf("address\t\t    0    1    2    3    4    5    6    7\t    8    9    a    b    c    d    e    F\t error\n");
 3ae:	8f e6       	ldi	r24, 0x6F	; 111
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 50 02 	call	0x4a0	; 0x4a0 <puts>
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA; i+=0x10)
 3b6:	00 e0       	ldi	r16, 0x00	; 0
 3b8:	10 e0       	ldi	r17, 0x00	; 0
 3ba:	42 c0       	rjmp	.+132    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
		{
			uint8_t error=0;
			printf("0x%04x\t\t",i);
 3bc:	1f 93       	push	r17
 3be:	0f 93       	push	r16
 3c0:	81 ed       	ldi	r24, 0xD1	; 209
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	9f 93       	push	r25
 3c6:	8f 93       	push	r24
 3c8:	0e 94 33 02 	call	0x466	; 0x466 <printf>
			for (uint8_t j=0;j<0x10; j++){
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	c0 e0       	ldi	r28, 0x00	; 0

		
		printf("address\t\t    0    1    2    3    4    5    6    7\t    8    9    a    b    c    d    e    F\t error\n");
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA; i+=0x10)
		{
			uint8_t error=0;
 3d6:	d0 e0       	ldi	r29, 0x00	; 0
			printf("0x%04x\t\t",i);
			for (uint8_t j=0;j<0x10; j++){
 3d8:	1c c0       	rjmp	.+56     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
				if (j==8){
 3da:	c8 30       	cpi	r28, 0x08	; 8
 3dc:	21 f4       	brne	.+8      	; 0x3e6 <main+0xbc>
					printf("\t");
 3de:	89 e0       	ldi	r24, 0x09	; 9
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 49 02 	call	0x492	; 0x492 <putchar>
				}
				temp=readByte(i+j);
 3e6:	c8 01       	movw	r24, r16
 3e8:	8c 0f       	add	r24, r28
 3ea:	91 1d       	adc	r25, r1
 3ec:	0e 94 ac 00 	call	0x158	; 0x158 <readByte>
				if (temp!=(uint8_t)(i+j+OFFSETV))
 3f0:	9c 2f       	mov	r25, r28
 3f2:	90 0f       	add	r25, r16
 3f4:	89 13       	cpse	r24, r25
				error++;
 3f6:	df 5f       	subi	r29, 0xFF	; 255
				
				printf(" 0x%02x",temp);
 3f8:	1f 92       	push	r1
 3fa:	8f 93       	push	r24
 3fc:	8a ed       	ldi	r24, 0xDA	; 218
 3fe:	91 e0       	ldi	r25, 0x01	; 1
 400:	9f 93       	push	r25
 402:	8f 93       	push	r24
 404:	0e 94 33 02 	call	0x466	; 0x466 <printf>
		printf("address\t\t    0    1    2    3    4    5    6    7\t    8    9    a    b    c    d    e    F\t error\n");
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA; i+=0x10)
		{
			uint8_t error=0;
			printf("0x%04x\t\t",i);
			for (uint8_t j=0;j<0x10; j++){
 408:	cf 5f       	subi	r28, 0xFF	; 255
 40a:	0f 90       	pop	r0
 40c:	0f 90       	pop	r0
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	c0 31       	cpi	r28, 0x10	; 16
 414:	10 f3       	brcs	.-60     	; 0x3da <main+0xb0>
				error++;
				
				printf(" 0x%02x",temp);

			}
			if(error)
 416:	dd 23       	and	r29, r29
 418:	69 f0       	breq	.+26     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
			printf("\t    %02d\n",error);
 41a:	1f 92       	push	r1
 41c:	df 93       	push	r29
 41e:	82 ee       	ldi	r24, 0xE2	; 226
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	9f 93       	push	r25
 424:	8f 93       	push	r24
 426:	0e 94 33 02 	call	0x466	; 0x466 <printf>
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	0f 90       	pop	r0
 430:	0f 90       	pop	r0
 432:	04 c0       	rjmp	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
			else
			printf("\n");
 434:	8a e0       	ldi	r24, 0x0A	; 10
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	0e 94 49 02 	call	0x492	; 0x492 <putchar>
	{
		uint8_t temp;

		
		printf("address\t\t    0    1    2    3    4    5    6    7\t    8    9    a    b    c    d    e    F\t error\n");
		for (uint16_t i=0+OFFSETA;i<=RANGE+OFFSETA; i+=0x10)
 43c:	00 5f       	subi	r16, 0xF0	; 240
 43e:	1f 4f       	sbci	r17, 0xFF	; 255
 440:	01 15       	cp	r16, r1
 442:	83 e0       	ldi	r24, 0x03	; 3
 444:	18 07       	cpc	r17, r24
 446:	08 f4       	brcc	.+2      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 448:	b9 cf       	rjmp	.-142    	; 0x3bc <main+0x92>
			if(error)
			printf("\t    %02d\n",error);
			else
			printf("\n");
		}
		printf("\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n");
 44a:	8d ee       	ldi	r24, 0xED	; 237
 44c:	91 e0       	ldi	r25, 0x01	; 1
 44e:	0e 94 50 02 	call	0x4a0	; 0x4a0 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 452:	9f ef       	ldi	r25, 0xFF	; 255
 454:	2b e7       	ldi	r18, 0x7B	; 123
 456:	82 e9       	ldi	r24, 0x92	; 146
 458:	91 50       	subi	r25, 0x01	; 1
 45a:	20 40       	sbci	r18, 0x00	; 0
 45c:	80 40       	sbci	r24, 0x00	; 0
 45e:	e1 f7       	brne	.-8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 460:	00 c0       	rjmp	.+0      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 462:	00 00       	nop
 464:	a4 cf       	rjmp	.-184    	; 0x3ae <main+0x84>

00000466 <printf>:
 466:	a0 e0       	ldi	r26, 0x00	; 0
 468:	b0 e0       	ldi	r27, 0x00	; 0
 46a:	e9 e3       	ldi	r30, 0x39	; 57
 46c:	f2 e0       	ldi	r31, 0x02	; 2
 46e:	0c 94 21 05 	jmp	0xa42	; 0xa42 <__prologue_saves__+0x20>
 472:	ae 01       	movw	r20, r28
 474:	4b 5f       	subi	r20, 0xFB	; 251
 476:	5f 4f       	sbci	r21, 0xFF	; 255
 478:	fa 01       	movw	r30, r20
 47a:	61 91       	ld	r22, Z+
 47c:	71 91       	ld	r23, Z+
 47e:	af 01       	movw	r20, r30
 480:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <__data_end+0x2>
 484:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <__data_end+0x3>
 488:	0e 94 80 02 	call	0x500	; 0x500 <vfprintf>
 48c:	e2 e0       	ldi	r30, 0x02	; 2
 48e:	0c 94 3d 05 	jmp	0xa7a	; 0xa7a <__epilogue_restores__+0x20>

00000492 <putchar>:
 492:	60 91 6e 02 	lds	r22, 0x026E	; 0x80026e <__data_end+0x2>
 496:	70 91 6f 02 	lds	r23, 0x026F	; 0x80026f <__data_end+0x3>
 49a:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 49e:	08 95       	ret

000004a0 <puts>:
 4a0:	0f 93       	push	r16
 4a2:	1f 93       	push	r17
 4a4:	cf 93       	push	r28
 4a6:	df 93       	push	r29
 4a8:	e0 91 6e 02 	lds	r30, 0x026E	; 0x80026e <__data_end+0x2>
 4ac:	f0 91 6f 02 	lds	r31, 0x026F	; 0x80026f <__data_end+0x3>
 4b0:	23 81       	ldd	r18, Z+3	; 0x03
 4b2:	21 ff       	sbrs	r18, 1
 4b4:	1b c0       	rjmp	.+54     	; 0x4ec <puts+0x4c>
 4b6:	8c 01       	movw	r16, r24
 4b8:	d0 e0       	ldi	r29, 0x00	; 0
 4ba:	c0 e0       	ldi	r28, 0x00	; 0
 4bc:	f8 01       	movw	r30, r16
 4be:	81 91       	ld	r24, Z+
 4c0:	8f 01       	movw	r16, r30
 4c2:	60 91 6e 02 	lds	r22, 0x026E	; 0x80026e <__data_end+0x2>
 4c6:	70 91 6f 02 	lds	r23, 0x026F	; 0x80026f <__data_end+0x3>
 4ca:	db 01       	movw	r26, r22
 4cc:	18 96       	adiw	r26, 0x08	; 8
 4ce:	ed 91       	ld	r30, X+
 4d0:	fc 91       	ld	r31, X
 4d2:	19 97       	sbiw	r26, 0x09	; 9
 4d4:	88 23       	and	r24, r24
 4d6:	31 f0       	breq	.+12     	; 0x4e4 <puts+0x44>
 4d8:	09 95       	icall
 4da:	89 2b       	or	r24, r25
 4dc:	79 f3       	breq	.-34     	; 0x4bc <puts+0x1c>
 4de:	df ef       	ldi	r29, 0xFF	; 255
 4e0:	cf ef       	ldi	r28, 0xFF	; 255
 4e2:	ec cf       	rjmp	.-40     	; 0x4bc <puts+0x1c>
 4e4:	8a e0       	ldi	r24, 0x0A	; 10
 4e6:	09 95       	icall
 4e8:	89 2b       	or	r24, r25
 4ea:	19 f0       	breq	.+6      	; 0x4f2 <puts+0x52>
 4ec:	8f ef       	ldi	r24, 0xFF	; 255
 4ee:	9f ef       	ldi	r25, 0xFF	; 255
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <puts+0x56>
 4f2:	8d 2f       	mov	r24, r29
 4f4:	9c 2f       	mov	r25, r28
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	1f 91       	pop	r17
 4fc:	0f 91       	pop	r16
 4fe:	08 95       	ret

00000500 <vfprintf>:
 500:	ab e0       	ldi	r26, 0x0B	; 11
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	e6 e8       	ldi	r30, 0x86	; 134
 506:	f2 e0       	ldi	r31, 0x02	; 2
 508:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__prologue_saves__>
 50c:	6c 01       	movw	r12, r24
 50e:	7b 01       	movw	r14, r22
 510:	8a 01       	movw	r16, r20
 512:	fc 01       	movw	r30, r24
 514:	17 82       	std	Z+7, r1	; 0x07
 516:	16 82       	std	Z+6, r1	; 0x06
 518:	83 81       	ldd	r24, Z+3	; 0x03
 51a:	81 ff       	sbrs	r24, 1
 51c:	cc c1       	rjmp	.+920    	; 0x8b6 <vfprintf+0x3b6>
 51e:	ce 01       	movw	r24, r28
 520:	01 96       	adiw	r24, 0x01	; 1
 522:	3c 01       	movw	r6, r24
 524:	f6 01       	movw	r30, r12
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	f7 01       	movw	r30, r14
 52a:	93 fd       	sbrc	r25, 3
 52c:	85 91       	lpm	r24, Z+
 52e:	93 ff       	sbrs	r25, 3
 530:	81 91       	ld	r24, Z+
 532:	7f 01       	movw	r14, r30
 534:	88 23       	and	r24, r24
 536:	09 f4       	brne	.+2      	; 0x53a <vfprintf+0x3a>
 538:	ba c1       	rjmp	.+884    	; 0x8ae <vfprintf+0x3ae>
 53a:	85 32       	cpi	r24, 0x25	; 37
 53c:	39 f4       	brne	.+14     	; 0x54c <vfprintf+0x4c>
 53e:	93 fd       	sbrc	r25, 3
 540:	85 91       	lpm	r24, Z+
 542:	93 ff       	sbrs	r25, 3
 544:	81 91       	ld	r24, Z+
 546:	7f 01       	movw	r14, r30
 548:	85 32       	cpi	r24, 0x25	; 37
 54a:	29 f4       	brne	.+10     	; 0x556 <vfprintf+0x56>
 54c:	b6 01       	movw	r22, r12
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 554:	e7 cf       	rjmp	.-50     	; 0x524 <vfprintf+0x24>
 556:	91 2c       	mov	r9, r1
 558:	21 2c       	mov	r2, r1
 55a:	31 2c       	mov	r3, r1
 55c:	ff e1       	ldi	r31, 0x1F	; 31
 55e:	f3 15       	cp	r31, r3
 560:	d8 f0       	brcs	.+54     	; 0x598 <vfprintf+0x98>
 562:	8b 32       	cpi	r24, 0x2B	; 43
 564:	79 f0       	breq	.+30     	; 0x584 <vfprintf+0x84>
 566:	38 f4       	brcc	.+14     	; 0x576 <vfprintf+0x76>
 568:	80 32       	cpi	r24, 0x20	; 32
 56a:	79 f0       	breq	.+30     	; 0x58a <vfprintf+0x8a>
 56c:	83 32       	cpi	r24, 0x23	; 35
 56e:	a1 f4       	brne	.+40     	; 0x598 <vfprintf+0x98>
 570:	23 2d       	mov	r18, r3
 572:	20 61       	ori	r18, 0x10	; 16
 574:	1d c0       	rjmp	.+58     	; 0x5b0 <vfprintf+0xb0>
 576:	8d 32       	cpi	r24, 0x2D	; 45
 578:	61 f0       	breq	.+24     	; 0x592 <vfprintf+0x92>
 57a:	80 33       	cpi	r24, 0x30	; 48
 57c:	69 f4       	brne	.+26     	; 0x598 <vfprintf+0x98>
 57e:	23 2d       	mov	r18, r3
 580:	21 60       	ori	r18, 0x01	; 1
 582:	16 c0       	rjmp	.+44     	; 0x5b0 <vfprintf+0xb0>
 584:	83 2d       	mov	r24, r3
 586:	82 60       	ori	r24, 0x02	; 2
 588:	38 2e       	mov	r3, r24
 58a:	e3 2d       	mov	r30, r3
 58c:	e4 60       	ori	r30, 0x04	; 4
 58e:	3e 2e       	mov	r3, r30
 590:	2a c0       	rjmp	.+84     	; 0x5e6 <vfprintf+0xe6>
 592:	f3 2d       	mov	r31, r3
 594:	f8 60       	ori	r31, 0x08	; 8
 596:	1d c0       	rjmp	.+58     	; 0x5d2 <vfprintf+0xd2>
 598:	37 fc       	sbrc	r3, 7
 59a:	2d c0       	rjmp	.+90     	; 0x5f6 <vfprintf+0xf6>
 59c:	20 ed       	ldi	r18, 0xD0	; 208
 59e:	28 0f       	add	r18, r24
 5a0:	2a 30       	cpi	r18, 0x0A	; 10
 5a2:	40 f0       	brcs	.+16     	; 0x5b4 <vfprintf+0xb4>
 5a4:	8e 32       	cpi	r24, 0x2E	; 46
 5a6:	b9 f4       	brne	.+46     	; 0x5d6 <vfprintf+0xd6>
 5a8:	36 fc       	sbrc	r3, 6
 5aa:	81 c1       	rjmp	.+770    	; 0x8ae <vfprintf+0x3ae>
 5ac:	23 2d       	mov	r18, r3
 5ae:	20 64       	ori	r18, 0x40	; 64
 5b0:	32 2e       	mov	r3, r18
 5b2:	19 c0       	rjmp	.+50     	; 0x5e6 <vfprintf+0xe6>
 5b4:	36 fe       	sbrs	r3, 6
 5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <vfprintf+0xc4>
 5b8:	8a e0       	ldi	r24, 0x0A	; 10
 5ba:	98 9e       	mul	r9, r24
 5bc:	20 0d       	add	r18, r0
 5be:	11 24       	eor	r1, r1
 5c0:	92 2e       	mov	r9, r18
 5c2:	11 c0       	rjmp	.+34     	; 0x5e6 <vfprintf+0xe6>
 5c4:	ea e0       	ldi	r30, 0x0A	; 10
 5c6:	2e 9e       	mul	r2, r30
 5c8:	20 0d       	add	r18, r0
 5ca:	11 24       	eor	r1, r1
 5cc:	22 2e       	mov	r2, r18
 5ce:	f3 2d       	mov	r31, r3
 5d0:	f0 62       	ori	r31, 0x20	; 32
 5d2:	3f 2e       	mov	r3, r31
 5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <vfprintf+0xe6>
 5d6:	8c 36       	cpi	r24, 0x6C	; 108
 5d8:	21 f4       	brne	.+8      	; 0x5e2 <vfprintf+0xe2>
 5da:	83 2d       	mov	r24, r3
 5dc:	80 68       	ori	r24, 0x80	; 128
 5de:	38 2e       	mov	r3, r24
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <vfprintf+0xe6>
 5e2:	88 36       	cpi	r24, 0x68	; 104
 5e4:	41 f4       	brne	.+16     	; 0x5f6 <vfprintf+0xf6>
 5e6:	f7 01       	movw	r30, r14
 5e8:	93 fd       	sbrc	r25, 3
 5ea:	85 91       	lpm	r24, Z+
 5ec:	93 ff       	sbrs	r25, 3
 5ee:	81 91       	ld	r24, Z+
 5f0:	7f 01       	movw	r14, r30
 5f2:	81 11       	cpse	r24, r1
 5f4:	b3 cf       	rjmp	.-154    	; 0x55c <vfprintf+0x5c>
 5f6:	98 2f       	mov	r25, r24
 5f8:	9f 7d       	andi	r25, 0xDF	; 223
 5fa:	95 54       	subi	r25, 0x45	; 69
 5fc:	93 30       	cpi	r25, 0x03	; 3
 5fe:	28 f4       	brcc	.+10     	; 0x60a <vfprintf+0x10a>
 600:	0c 5f       	subi	r16, 0xFC	; 252
 602:	1f 4f       	sbci	r17, 0xFF	; 255
 604:	9f e3       	ldi	r25, 0x3F	; 63
 606:	99 83       	std	Y+1, r25	; 0x01
 608:	0d c0       	rjmp	.+26     	; 0x624 <vfprintf+0x124>
 60a:	83 36       	cpi	r24, 0x63	; 99
 60c:	31 f0       	breq	.+12     	; 0x61a <vfprintf+0x11a>
 60e:	83 37       	cpi	r24, 0x73	; 115
 610:	71 f0       	breq	.+28     	; 0x62e <vfprintf+0x12e>
 612:	83 35       	cpi	r24, 0x53	; 83
 614:	09 f0       	breq	.+2      	; 0x618 <vfprintf+0x118>
 616:	59 c0       	rjmp	.+178    	; 0x6ca <vfprintf+0x1ca>
 618:	21 c0       	rjmp	.+66     	; 0x65c <vfprintf+0x15c>
 61a:	f8 01       	movw	r30, r16
 61c:	80 81       	ld	r24, Z
 61e:	89 83       	std	Y+1, r24	; 0x01
 620:	0e 5f       	subi	r16, 0xFE	; 254
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	88 24       	eor	r8, r8
 626:	83 94       	inc	r8
 628:	91 2c       	mov	r9, r1
 62a:	53 01       	movw	r10, r6
 62c:	13 c0       	rjmp	.+38     	; 0x654 <vfprintf+0x154>
 62e:	28 01       	movw	r4, r16
 630:	f2 e0       	ldi	r31, 0x02	; 2
 632:	4f 0e       	add	r4, r31
 634:	51 1c       	adc	r5, r1
 636:	f8 01       	movw	r30, r16
 638:	a0 80       	ld	r10, Z
 63a:	b1 80       	ldd	r11, Z+1	; 0x01
 63c:	36 fe       	sbrs	r3, 6
 63e:	03 c0       	rjmp	.+6      	; 0x646 <vfprintf+0x146>
 640:	69 2d       	mov	r22, r9
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <vfprintf+0x14a>
 646:	6f ef       	ldi	r22, 0xFF	; 255
 648:	7f ef       	ldi	r23, 0xFF	; 255
 64a:	c5 01       	movw	r24, r10
 64c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <strnlen>
 650:	4c 01       	movw	r8, r24
 652:	82 01       	movw	r16, r4
 654:	f3 2d       	mov	r31, r3
 656:	ff 77       	andi	r31, 0x7F	; 127
 658:	3f 2e       	mov	r3, r31
 65a:	16 c0       	rjmp	.+44     	; 0x688 <vfprintf+0x188>
 65c:	28 01       	movw	r4, r16
 65e:	22 e0       	ldi	r18, 0x02	; 2
 660:	42 0e       	add	r4, r18
 662:	51 1c       	adc	r5, r1
 664:	f8 01       	movw	r30, r16
 666:	a0 80       	ld	r10, Z
 668:	b1 80       	ldd	r11, Z+1	; 0x01
 66a:	36 fe       	sbrs	r3, 6
 66c:	03 c0       	rjmp	.+6      	; 0x674 <vfprintf+0x174>
 66e:	69 2d       	mov	r22, r9
 670:	70 e0       	ldi	r23, 0x00	; 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <vfprintf+0x178>
 674:	6f ef       	ldi	r22, 0xFF	; 255
 676:	7f ef       	ldi	r23, 0xFF	; 255
 678:	c5 01       	movw	r24, r10
 67a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <strnlen_P>
 67e:	4c 01       	movw	r8, r24
 680:	f3 2d       	mov	r31, r3
 682:	f0 68       	ori	r31, 0x80	; 128
 684:	3f 2e       	mov	r3, r31
 686:	82 01       	movw	r16, r4
 688:	33 fc       	sbrc	r3, 3
 68a:	1b c0       	rjmp	.+54     	; 0x6c2 <vfprintf+0x1c2>
 68c:	82 2d       	mov	r24, r2
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	88 16       	cp	r8, r24
 692:	99 06       	cpc	r9, r25
 694:	b0 f4       	brcc	.+44     	; 0x6c2 <vfprintf+0x1c2>
 696:	b6 01       	movw	r22, r12
 698:	80 e2       	ldi	r24, 0x20	; 32
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 6a0:	2a 94       	dec	r2
 6a2:	f4 cf       	rjmp	.-24     	; 0x68c <vfprintf+0x18c>
 6a4:	f5 01       	movw	r30, r10
 6a6:	37 fc       	sbrc	r3, 7
 6a8:	85 91       	lpm	r24, Z+
 6aa:	37 fe       	sbrs	r3, 7
 6ac:	81 91       	ld	r24, Z+
 6ae:	5f 01       	movw	r10, r30
 6b0:	b6 01       	movw	r22, r12
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 6b8:	21 10       	cpse	r2, r1
 6ba:	2a 94       	dec	r2
 6bc:	21 e0       	ldi	r18, 0x01	; 1
 6be:	82 1a       	sub	r8, r18
 6c0:	91 08       	sbc	r9, r1
 6c2:	81 14       	cp	r8, r1
 6c4:	91 04       	cpc	r9, r1
 6c6:	71 f7       	brne	.-36     	; 0x6a4 <vfprintf+0x1a4>
 6c8:	e8 c0       	rjmp	.+464    	; 0x89a <vfprintf+0x39a>
 6ca:	84 36       	cpi	r24, 0x64	; 100
 6cc:	11 f0       	breq	.+4      	; 0x6d2 <vfprintf+0x1d2>
 6ce:	89 36       	cpi	r24, 0x69	; 105
 6d0:	41 f5       	brne	.+80     	; 0x722 <vfprintf+0x222>
 6d2:	f8 01       	movw	r30, r16
 6d4:	37 fe       	sbrs	r3, 7
 6d6:	07 c0       	rjmp	.+14     	; 0x6e6 <vfprintf+0x1e6>
 6d8:	60 81       	ld	r22, Z
 6da:	71 81       	ldd	r23, Z+1	; 0x01
 6dc:	82 81       	ldd	r24, Z+2	; 0x02
 6de:	93 81       	ldd	r25, Z+3	; 0x03
 6e0:	0c 5f       	subi	r16, 0xFC	; 252
 6e2:	1f 4f       	sbci	r17, 0xFF	; 255
 6e4:	08 c0       	rjmp	.+16     	; 0x6f6 <vfprintf+0x1f6>
 6e6:	60 81       	ld	r22, Z
 6e8:	71 81       	ldd	r23, Z+1	; 0x01
 6ea:	07 2e       	mov	r0, r23
 6ec:	00 0c       	add	r0, r0
 6ee:	88 0b       	sbc	r24, r24
 6f0:	99 0b       	sbc	r25, r25
 6f2:	0e 5f       	subi	r16, 0xFE	; 254
 6f4:	1f 4f       	sbci	r17, 0xFF	; 255
 6f6:	f3 2d       	mov	r31, r3
 6f8:	ff 76       	andi	r31, 0x6F	; 111
 6fa:	3f 2e       	mov	r3, r31
 6fc:	97 ff       	sbrs	r25, 7
 6fe:	09 c0       	rjmp	.+18     	; 0x712 <vfprintf+0x212>
 700:	90 95       	com	r25
 702:	80 95       	com	r24
 704:	70 95       	com	r23
 706:	61 95       	neg	r22
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	8f 4f       	sbci	r24, 0xFF	; 255
 70c:	9f 4f       	sbci	r25, 0xFF	; 255
 70e:	f0 68       	ori	r31, 0x80	; 128
 710:	3f 2e       	mov	r3, r31
 712:	2a e0       	ldi	r18, 0x0A	; 10
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	a3 01       	movw	r20, r6
 718:	0e 94 b3 04 	call	0x966	; 0x966 <__ultoa_invert>
 71c:	88 2e       	mov	r8, r24
 71e:	86 18       	sub	r8, r6
 720:	45 c0       	rjmp	.+138    	; 0x7ac <vfprintf+0x2ac>
 722:	85 37       	cpi	r24, 0x75	; 117
 724:	31 f4       	brne	.+12     	; 0x732 <vfprintf+0x232>
 726:	23 2d       	mov	r18, r3
 728:	2f 7e       	andi	r18, 0xEF	; 239
 72a:	b2 2e       	mov	r11, r18
 72c:	2a e0       	ldi	r18, 0x0A	; 10
 72e:	30 e0       	ldi	r19, 0x00	; 0
 730:	25 c0       	rjmp	.+74     	; 0x77c <vfprintf+0x27c>
 732:	93 2d       	mov	r25, r3
 734:	99 7f       	andi	r25, 0xF9	; 249
 736:	b9 2e       	mov	r11, r25
 738:	8f 36       	cpi	r24, 0x6F	; 111
 73a:	c1 f0       	breq	.+48     	; 0x76c <vfprintf+0x26c>
 73c:	18 f4       	brcc	.+6      	; 0x744 <vfprintf+0x244>
 73e:	88 35       	cpi	r24, 0x58	; 88
 740:	79 f0       	breq	.+30     	; 0x760 <vfprintf+0x260>
 742:	b5 c0       	rjmp	.+362    	; 0x8ae <vfprintf+0x3ae>
 744:	80 37       	cpi	r24, 0x70	; 112
 746:	19 f0       	breq	.+6      	; 0x74e <vfprintf+0x24e>
 748:	88 37       	cpi	r24, 0x78	; 120
 74a:	21 f0       	breq	.+8      	; 0x754 <vfprintf+0x254>
 74c:	b0 c0       	rjmp	.+352    	; 0x8ae <vfprintf+0x3ae>
 74e:	e9 2f       	mov	r30, r25
 750:	e0 61       	ori	r30, 0x10	; 16
 752:	be 2e       	mov	r11, r30
 754:	b4 fe       	sbrs	r11, 4
 756:	0d c0       	rjmp	.+26     	; 0x772 <vfprintf+0x272>
 758:	fb 2d       	mov	r31, r11
 75a:	f4 60       	ori	r31, 0x04	; 4
 75c:	bf 2e       	mov	r11, r31
 75e:	09 c0       	rjmp	.+18     	; 0x772 <vfprintf+0x272>
 760:	34 fe       	sbrs	r3, 4
 762:	0a c0       	rjmp	.+20     	; 0x778 <vfprintf+0x278>
 764:	29 2f       	mov	r18, r25
 766:	26 60       	ori	r18, 0x06	; 6
 768:	b2 2e       	mov	r11, r18
 76a:	06 c0       	rjmp	.+12     	; 0x778 <vfprintf+0x278>
 76c:	28 e0       	ldi	r18, 0x08	; 8
 76e:	30 e0       	ldi	r19, 0x00	; 0
 770:	05 c0       	rjmp	.+10     	; 0x77c <vfprintf+0x27c>
 772:	20 e1       	ldi	r18, 0x10	; 16
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <vfprintf+0x27c>
 778:	20 e1       	ldi	r18, 0x10	; 16
 77a:	32 e0       	ldi	r19, 0x02	; 2
 77c:	f8 01       	movw	r30, r16
 77e:	b7 fe       	sbrs	r11, 7
 780:	07 c0       	rjmp	.+14     	; 0x790 <vfprintf+0x290>
 782:	60 81       	ld	r22, Z
 784:	71 81       	ldd	r23, Z+1	; 0x01
 786:	82 81       	ldd	r24, Z+2	; 0x02
 788:	93 81       	ldd	r25, Z+3	; 0x03
 78a:	0c 5f       	subi	r16, 0xFC	; 252
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	06 c0       	rjmp	.+12     	; 0x79c <vfprintf+0x29c>
 790:	60 81       	ld	r22, Z
 792:	71 81       	ldd	r23, Z+1	; 0x01
 794:	80 e0       	ldi	r24, 0x00	; 0
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0e 5f       	subi	r16, 0xFE	; 254
 79a:	1f 4f       	sbci	r17, 0xFF	; 255
 79c:	a3 01       	movw	r20, r6
 79e:	0e 94 b3 04 	call	0x966	; 0x966 <__ultoa_invert>
 7a2:	88 2e       	mov	r8, r24
 7a4:	86 18       	sub	r8, r6
 7a6:	fb 2d       	mov	r31, r11
 7a8:	ff 77       	andi	r31, 0x7F	; 127
 7aa:	3f 2e       	mov	r3, r31
 7ac:	36 fe       	sbrs	r3, 6
 7ae:	0d c0       	rjmp	.+26     	; 0x7ca <vfprintf+0x2ca>
 7b0:	23 2d       	mov	r18, r3
 7b2:	2e 7f       	andi	r18, 0xFE	; 254
 7b4:	a2 2e       	mov	r10, r18
 7b6:	89 14       	cp	r8, r9
 7b8:	58 f4       	brcc	.+22     	; 0x7d0 <vfprintf+0x2d0>
 7ba:	34 fe       	sbrs	r3, 4
 7bc:	0b c0       	rjmp	.+22     	; 0x7d4 <vfprintf+0x2d4>
 7be:	32 fc       	sbrc	r3, 2
 7c0:	09 c0       	rjmp	.+18     	; 0x7d4 <vfprintf+0x2d4>
 7c2:	83 2d       	mov	r24, r3
 7c4:	8e 7e       	andi	r24, 0xEE	; 238
 7c6:	a8 2e       	mov	r10, r24
 7c8:	05 c0       	rjmp	.+10     	; 0x7d4 <vfprintf+0x2d4>
 7ca:	b8 2c       	mov	r11, r8
 7cc:	a3 2c       	mov	r10, r3
 7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <vfprintf+0x2d6>
 7d0:	b8 2c       	mov	r11, r8
 7d2:	01 c0       	rjmp	.+2      	; 0x7d6 <vfprintf+0x2d6>
 7d4:	b9 2c       	mov	r11, r9
 7d6:	a4 fe       	sbrs	r10, 4
 7d8:	0f c0       	rjmp	.+30     	; 0x7f8 <vfprintf+0x2f8>
 7da:	fe 01       	movw	r30, r28
 7dc:	e8 0d       	add	r30, r8
 7de:	f1 1d       	adc	r31, r1
 7e0:	80 81       	ld	r24, Z
 7e2:	80 33       	cpi	r24, 0x30	; 48
 7e4:	21 f4       	brne	.+8      	; 0x7ee <vfprintf+0x2ee>
 7e6:	9a 2d       	mov	r25, r10
 7e8:	99 7e       	andi	r25, 0xE9	; 233
 7ea:	a9 2e       	mov	r10, r25
 7ec:	09 c0       	rjmp	.+18     	; 0x800 <vfprintf+0x300>
 7ee:	a2 fe       	sbrs	r10, 2
 7f0:	06 c0       	rjmp	.+12     	; 0x7fe <vfprintf+0x2fe>
 7f2:	b3 94       	inc	r11
 7f4:	b3 94       	inc	r11
 7f6:	04 c0       	rjmp	.+8      	; 0x800 <vfprintf+0x300>
 7f8:	8a 2d       	mov	r24, r10
 7fa:	86 78       	andi	r24, 0x86	; 134
 7fc:	09 f0       	breq	.+2      	; 0x800 <vfprintf+0x300>
 7fe:	b3 94       	inc	r11
 800:	a3 fc       	sbrc	r10, 3
 802:	11 c0       	rjmp	.+34     	; 0x826 <vfprintf+0x326>
 804:	a0 fe       	sbrs	r10, 0
 806:	06 c0       	rjmp	.+12     	; 0x814 <vfprintf+0x314>
 808:	b2 14       	cp	r11, r2
 80a:	88 f4       	brcc	.+34     	; 0x82e <vfprintf+0x32e>
 80c:	28 0c       	add	r2, r8
 80e:	92 2c       	mov	r9, r2
 810:	9b 18       	sub	r9, r11
 812:	0e c0       	rjmp	.+28     	; 0x830 <vfprintf+0x330>
 814:	b2 14       	cp	r11, r2
 816:	60 f4       	brcc	.+24     	; 0x830 <vfprintf+0x330>
 818:	b6 01       	movw	r22, r12
 81a:	80 e2       	ldi	r24, 0x20	; 32
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 822:	b3 94       	inc	r11
 824:	f7 cf       	rjmp	.-18     	; 0x814 <vfprintf+0x314>
 826:	b2 14       	cp	r11, r2
 828:	18 f4       	brcc	.+6      	; 0x830 <vfprintf+0x330>
 82a:	2b 18       	sub	r2, r11
 82c:	02 c0       	rjmp	.+4      	; 0x832 <vfprintf+0x332>
 82e:	98 2c       	mov	r9, r8
 830:	21 2c       	mov	r2, r1
 832:	a4 fe       	sbrs	r10, 4
 834:	10 c0       	rjmp	.+32     	; 0x856 <vfprintf+0x356>
 836:	b6 01       	movw	r22, r12
 838:	80 e3       	ldi	r24, 0x30	; 48
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 840:	a2 fe       	sbrs	r10, 2
 842:	17 c0       	rjmp	.+46     	; 0x872 <vfprintf+0x372>
 844:	a1 fc       	sbrc	r10, 1
 846:	03 c0       	rjmp	.+6      	; 0x84e <vfprintf+0x34e>
 848:	88 e7       	ldi	r24, 0x78	; 120
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x352>
 84e:	88 e5       	ldi	r24, 0x58	; 88
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	b6 01       	movw	r22, r12
 854:	0c c0       	rjmp	.+24     	; 0x86e <vfprintf+0x36e>
 856:	8a 2d       	mov	r24, r10
 858:	86 78       	andi	r24, 0x86	; 134
 85a:	59 f0       	breq	.+22     	; 0x872 <vfprintf+0x372>
 85c:	a1 fe       	sbrs	r10, 1
 85e:	02 c0       	rjmp	.+4      	; 0x864 <vfprintf+0x364>
 860:	8b e2       	ldi	r24, 0x2B	; 43
 862:	01 c0       	rjmp	.+2      	; 0x866 <vfprintf+0x366>
 864:	80 e2       	ldi	r24, 0x20	; 32
 866:	a7 fc       	sbrc	r10, 7
 868:	8d e2       	ldi	r24, 0x2D	; 45
 86a:	b6 01       	movw	r22, r12
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 872:	89 14       	cp	r8, r9
 874:	38 f4       	brcc	.+14     	; 0x884 <vfprintf+0x384>
 876:	b6 01       	movw	r22, r12
 878:	80 e3       	ldi	r24, 0x30	; 48
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 880:	9a 94       	dec	r9
 882:	f7 cf       	rjmp	.-18     	; 0x872 <vfprintf+0x372>
 884:	8a 94       	dec	r8
 886:	f3 01       	movw	r30, r6
 888:	e8 0d       	add	r30, r8
 88a:	f1 1d       	adc	r31, r1
 88c:	80 81       	ld	r24, Z
 88e:	b6 01       	movw	r22, r12
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 896:	81 10       	cpse	r8, r1
 898:	f5 cf       	rjmp	.-22     	; 0x884 <vfprintf+0x384>
 89a:	22 20       	and	r2, r2
 89c:	09 f4       	brne	.+2      	; 0x8a0 <vfprintf+0x3a0>
 89e:	42 ce       	rjmp	.-892    	; 0x524 <vfprintf+0x24>
 8a0:	b6 01       	movw	r22, r12
 8a2:	80 e2       	ldi	r24, 0x20	; 32
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 77 04 	call	0x8ee	; 0x8ee <fputc>
 8aa:	2a 94       	dec	r2
 8ac:	f6 cf       	rjmp	.-20     	; 0x89a <vfprintf+0x39a>
 8ae:	f6 01       	movw	r30, r12
 8b0:	86 81       	ldd	r24, Z+6	; 0x06
 8b2:	97 81       	ldd	r25, Z+7	; 0x07
 8b4:	02 c0       	rjmp	.+4      	; 0x8ba <vfprintf+0x3ba>
 8b6:	8f ef       	ldi	r24, 0xFF	; 255
 8b8:	9f ef       	ldi	r25, 0xFF	; 255
 8ba:	2b 96       	adiw	r28, 0x0b	; 11
 8bc:	e2 e1       	ldi	r30, 0x12	; 18
 8be:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <__epilogue_restores__>

000008c2 <strnlen_P>:
 8c2:	fc 01       	movw	r30, r24
 8c4:	05 90       	lpm	r0, Z+
 8c6:	61 50       	subi	r22, 0x01	; 1
 8c8:	70 40       	sbci	r23, 0x00	; 0
 8ca:	01 10       	cpse	r0, r1
 8cc:	d8 f7       	brcc	.-10     	; 0x8c4 <strnlen_P+0x2>
 8ce:	80 95       	com	r24
 8d0:	90 95       	com	r25
 8d2:	8e 0f       	add	r24, r30
 8d4:	9f 1f       	adc	r25, r31
 8d6:	08 95       	ret

000008d8 <strnlen>:
 8d8:	fc 01       	movw	r30, r24
 8da:	61 50       	subi	r22, 0x01	; 1
 8dc:	70 40       	sbci	r23, 0x00	; 0
 8de:	01 90       	ld	r0, Z+
 8e0:	01 10       	cpse	r0, r1
 8e2:	d8 f7       	brcc	.-10     	; 0x8da <strnlen+0x2>
 8e4:	80 95       	com	r24
 8e6:	90 95       	com	r25
 8e8:	8e 0f       	add	r24, r30
 8ea:	9f 1f       	adc	r25, r31
 8ec:	08 95       	ret

000008ee <fputc>:
 8ee:	0f 93       	push	r16
 8f0:	1f 93       	push	r17
 8f2:	cf 93       	push	r28
 8f4:	df 93       	push	r29
 8f6:	fb 01       	movw	r30, r22
 8f8:	23 81       	ldd	r18, Z+3	; 0x03
 8fa:	21 fd       	sbrc	r18, 1
 8fc:	03 c0       	rjmp	.+6      	; 0x904 <fputc+0x16>
 8fe:	8f ef       	ldi	r24, 0xFF	; 255
 900:	9f ef       	ldi	r25, 0xFF	; 255
 902:	2c c0       	rjmp	.+88     	; 0x95c <fputc+0x6e>
 904:	22 ff       	sbrs	r18, 2
 906:	16 c0       	rjmp	.+44     	; 0x934 <fputc+0x46>
 908:	46 81       	ldd	r20, Z+6	; 0x06
 90a:	57 81       	ldd	r21, Z+7	; 0x07
 90c:	24 81       	ldd	r18, Z+4	; 0x04
 90e:	35 81       	ldd	r19, Z+5	; 0x05
 910:	42 17       	cp	r20, r18
 912:	53 07       	cpc	r21, r19
 914:	44 f4       	brge	.+16     	; 0x926 <fputc+0x38>
 916:	a0 81       	ld	r26, Z
 918:	b1 81       	ldd	r27, Z+1	; 0x01
 91a:	9d 01       	movw	r18, r26
 91c:	2f 5f       	subi	r18, 0xFF	; 255
 91e:	3f 4f       	sbci	r19, 0xFF	; 255
 920:	31 83       	std	Z+1, r19	; 0x01
 922:	20 83       	st	Z, r18
 924:	8c 93       	st	X, r24
 926:	26 81       	ldd	r18, Z+6	; 0x06
 928:	37 81       	ldd	r19, Z+7	; 0x07
 92a:	2f 5f       	subi	r18, 0xFF	; 255
 92c:	3f 4f       	sbci	r19, 0xFF	; 255
 92e:	37 83       	std	Z+7, r19	; 0x07
 930:	26 83       	std	Z+6, r18	; 0x06
 932:	14 c0       	rjmp	.+40     	; 0x95c <fputc+0x6e>
 934:	8b 01       	movw	r16, r22
 936:	ec 01       	movw	r28, r24
 938:	fb 01       	movw	r30, r22
 93a:	00 84       	ldd	r0, Z+8	; 0x08
 93c:	f1 85       	ldd	r31, Z+9	; 0x09
 93e:	e0 2d       	mov	r30, r0
 940:	09 95       	icall
 942:	89 2b       	or	r24, r25
 944:	e1 f6       	brne	.-72     	; 0x8fe <fputc+0x10>
 946:	d8 01       	movw	r26, r16
 948:	16 96       	adiw	r26, 0x06	; 6
 94a:	8d 91       	ld	r24, X+
 94c:	9c 91       	ld	r25, X
 94e:	17 97       	sbiw	r26, 0x07	; 7
 950:	01 96       	adiw	r24, 0x01	; 1
 952:	17 96       	adiw	r26, 0x07	; 7
 954:	9c 93       	st	X, r25
 956:	8e 93       	st	-X, r24
 958:	16 97       	sbiw	r26, 0x06	; 6
 95a:	ce 01       	movw	r24, r28
 95c:	df 91       	pop	r29
 95e:	cf 91       	pop	r28
 960:	1f 91       	pop	r17
 962:	0f 91       	pop	r16
 964:	08 95       	ret

00000966 <__ultoa_invert>:
 966:	fa 01       	movw	r30, r20
 968:	aa 27       	eor	r26, r26
 96a:	28 30       	cpi	r18, 0x08	; 8
 96c:	51 f1       	breq	.+84     	; 0x9c2 <__ultoa_invert+0x5c>
 96e:	20 31       	cpi	r18, 0x10	; 16
 970:	81 f1       	breq	.+96     	; 0x9d2 <__ultoa_invert+0x6c>
 972:	e8 94       	clt
 974:	6f 93       	push	r22
 976:	6e 7f       	andi	r22, 0xFE	; 254
 978:	6e 5f       	subi	r22, 0xFE	; 254
 97a:	7f 4f       	sbci	r23, 0xFF	; 255
 97c:	8f 4f       	sbci	r24, 0xFF	; 255
 97e:	9f 4f       	sbci	r25, 0xFF	; 255
 980:	af 4f       	sbci	r26, 0xFF	; 255
 982:	b1 e0       	ldi	r27, 0x01	; 1
 984:	3e d0       	rcall	.+124    	; 0xa02 <__ultoa_invert+0x9c>
 986:	b4 e0       	ldi	r27, 0x04	; 4
 988:	3c d0       	rcall	.+120    	; 0xa02 <__ultoa_invert+0x9c>
 98a:	67 0f       	add	r22, r23
 98c:	78 1f       	adc	r23, r24
 98e:	89 1f       	adc	r24, r25
 990:	9a 1f       	adc	r25, r26
 992:	a1 1d       	adc	r26, r1
 994:	68 0f       	add	r22, r24
 996:	79 1f       	adc	r23, r25
 998:	8a 1f       	adc	r24, r26
 99a:	91 1d       	adc	r25, r1
 99c:	a1 1d       	adc	r26, r1
 99e:	6a 0f       	add	r22, r26
 9a0:	71 1d       	adc	r23, r1
 9a2:	81 1d       	adc	r24, r1
 9a4:	91 1d       	adc	r25, r1
 9a6:	a1 1d       	adc	r26, r1
 9a8:	20 d0       	rcall	.+64     	; 0x9ea <__ultoa_invert+0x84>
 9aa:	09 f4       	brne	.+2      	; 0x9ae <__ultoa_invert+0x48>
 9ac:	68 94       	set
 9ae:	3f 91       	pop	r19
 9b0:	2a e0       	ldi	r18, 0x0A	; 10
 9b2:	26 9f       	mul	r18, r22
 9b4:	11 24       	eor	r1, r1
 9b6:	30 19       	sub	r19, r0
 9b8:	30 5d       	subi	r19, 0xD0	; 208
 9ba:	31 93       	st	Z+, r19
 9bc:	de f6       	brtc	.-74     	; 0x974 <__ultoa_invert+0xe>
 9be:	cf 01       	movw	r24, r30
 9c0:	08 95       	ret
 9c2:	46 2f       	mov	r20, r22
 9c4:	47 70       	andi	r20, 0x07	; 7
 9c6:	40 5d       	subi	r20, 0xD0	; 208
 9c8:	41 93       	st	Z+, r20
 9ca:	b3 e0       	ldi	r27, 0x03	; 3
 9cc:	0f d0       	rcall	.+30     	; 0x9ec <__ultoa_invert+0x86>
 9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__ultoa_invert+0x5c>
 9d0:	f6 cf       	rjmp	.-20     	; 0x9be <__ultoa_invert+0x58>
 9d2:	46 2f       	mov	r20, r22
 9d4:	4f 70       	andi	r20, 0x0F	; 15
 9d6:	40 5d       	subi	r20, 0xD0	; 208
 9d8:	4a 33       	cpi	r20, 0x3A	; 58
 9da:	18 f0       	brcs	.+6      	; 0x9e2 <__ultoa_invert+0x7c>
 9dc:	49 5d       	subi	r20, 0xD9	; 217
 9de:	31 fd       	sbrc	r19, 1
 9e0:	40 52       	subi	r20, 0x20	; 32
 9e2:	41 93       	st	Z+, r20
 9e4:	02 d0       	rcall	.+4      	; 0x9ea <__ultoa_invert+0x84>
 9e6:	a9 f7       	brne	.-22     	; 0x9d2 <__ultoa_invert+0x6c>
 9e8:	ea cf       	rjmp	.-44     	; 0x9be <__ultoa_invert+0x58>
 9ea:	b4 e0       	ldi	r27, 0x04	; 4
 9ec:	a6 95       	lsr	r26
 9ee:	97 95       	ror	r25
 9f0:	87 95       	ror	r24
 9f2:	77 95       	ror	r23
 9f4:	67 95       	ror	r22
 9f6:	ba 95       	dec	r27
 9f8:	c9 f7       	brne	.-14     	; 0x9ec <__ultoa_invert+0x86>
 9fa:	00 97       	sbiw	r24, 0x00	; 0
 9fc:	61 05       	cpc	r22, r1
 9fe:	71 05       	cpc	r23, r1
 a00:	08 95       	ret
 a02:	9b 01       	movw	r18, r22
 a04:	ac 01       	movw	r20, r24
 a06:	0a 2e       	mov	r0, r26
 a08:	06 94       	lsr	r0
 a0a:	57 95       	ror	r21
 a0c:	47 95       	ror	r20
 a0e:	37 95       	ror	r19
 a10:	27 95       	ror	r18
 a12:	ba 95       	dec	r27
 a14:	c9 f7       	brne	.-14     	; 0xa08 <__ultoa_invert+0xa2>
 a16:	62 0f       	add	r22, r18
 a18:	73 1f       	adc	r23, r19
 a1a:	84 1f       	adc	r24, r20
 a1c:	95 1f       	adc	r25, r21
 a1e:	a0 1d       	adc	r26, r0
 a20:	08 95       	ret

00000a22 <__prologue_saves__>:
 a22:	2f 92       	push	r2
 a24:	3f 92       	push	r3
 a26:	4f 92       	push	r4
 a28:	5f 92       	push	r5
 a2a:	6f 92       	push	r6
 a2c:	7f 92       	push	r7
 a2e:	8f 92       	push	r8
 a30:	9f 92       	push	r9
 a32:	af 92       	push	r10
 a34:	bf 92       	push	r11
 a36:	cf 92       	push	r12
 a38:	df 92       	push	r13
 a3a:	ef 92       	push	r14
 a3c:	ff 92       	push	r15
 a3e:	0f 93       	push	r16
 a40:	1f 93       	push	r17
 a42:	cf 93       	push	r28
 a44:	df 93       	push	r29
 a46:	cd b7       	in	r28, 0x3d	; 61
 a48:	de b7       	in	r29, 0x3e	; 62
 a4a:	ca 1b       	sub	r28, r26
 a4c:	db 0b       	sbc	r29, r27
 a4e:	0f b6       	in	r0, 0x3f	; 63
 a50:	f8 94       	cli
 a52:	de bf       	out	0x3e, r29	; 62
 a54:	0f be       	out	0x3f, r0	; 63
 a56:	cd bf       	out	0x3d, r28	; 61
 a58:	09 94       	ijmp

00000a5a <__epilogue_restores__>:
 a5a:	2a 88       	ldd	r2, Y+18	; 0x12
 a5c:	39 88       	ldd	r3, Y+17	; 0x11
 a5e:	48 88       	ldd	r4, Y+16	; 0x10
 a60:	5f 84       	ldd	r5, Y+15	; 0x0f
 a62:	6e 84       	ldd	r6, Y+14	; 0x0e
 a64:	7d 84       	ldd	r7, Y+13	; 0x0d
 a66:	8c 84       	ldd	r8, Y+12	; 0x0c
 a68:	9b 84       	ldd	r9, Y+11	; 0x0b
 a6a:	aa 84       	ldd	r10, Y+10	; 0x0a
 a6c:	b9 84       	ldd	r11, Y+9	; 0x09
 a6e:	c8 84       	ldd	r12, Y+8	; 0x08
 a70:	df 80       	ldd	r13, Y+7	; 0x07
 a72:	ee 80       	ldd	r14, Y+6	; 0x06
 a74:	fd 80       	ldd	r15, Y+5	; 0x05
 a76:	0c 81       	ldd	r16, Y+4	; 0x04
 a78:	1b 81       	ldd	r17, Y+3	; 0x03
 a7a:	aa 81       	ldd	r26, Y+2	; 0x02
 a7c:	b9 81       	ldd	r27, Y+1	; 0x01
 a7e:	ce 0f       	add	r28, r30
 a80:	d1 1d       	adc	r29, r1
 a82:	0f b6       	in	r0, 0x3f	; 63
 a84:	f8 94       	cli
 a86:	de bf       	out	0x3e, r29	; 62
 a88:	0f be       	out	0x3f, r0	; 63
 a8a:	cd bf       	out	0x3d, r28	; 61
 a8c:	ed 01       	movw	r28, r26
 a8e:	08 95       	ret

00000a90 <_exit>:
 a90:	f8 94       	cli

00000a92 <__stop_program>:
 a92:	ff cf       	rjmp	.-2      	; 0xa92 <__stop_program>
